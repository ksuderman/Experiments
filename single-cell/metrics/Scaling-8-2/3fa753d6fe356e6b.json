{
    "run": "1",
    "cloud": "test",
    "job_conf": "8x16",
    "workflow_id": "40d6e1e6f1f11cad",
    "history_id": "49d18fedd87e0f01",
    "inputs": "read1 read2 cdna gtf",
    "metrics": {
        "model_class": "Job",
        "id": "3fa753d6fe356e6b",
        "state": "ok",
        "exit_code": 0,
        "update_time": "2023-07-28T19:42:08.722204",
        "create_time": "2023-07-28T19:33:41.345953",
        "galaxy_version": "23.0",
        "command_version": "",
        "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/sceasy_convert/sceasy_convert/0.0.5+galaxy1",
        "history_id": "49d18fedd87e0f01",
        "external_id": "gxy-galaxy-galaxy-bc5lp",
        "command_line": "ln -s /galaxy/server/database/objects/d/c/8/dataset_dc8ac61b-ed2c-48c1-91ba-6d6f132e6fab.dat input.rds &&  Rscript -e 'library(sceasy)' -e 'sce <- readRDS(\"input.rds\")' -e 'sceasy::convertFormat(sce, outFile=\"output.h5ad\", from=\"sce\", to=\"anndata\", main_layer=\"counts\")' -e 'print(sce)'",
        "traceback": null,
        "params": {
            "__input_ext": "\"rdata\"",
            "dbkey": "\"?\"",
            "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
            "__workflow_invocation_uuid__": "\"a7479de22d7d11ee862856759b808bb9\"",
            "conversion": "{\"__current_case__\": 2, \"assay\": \"counts\", \"direction\": \"sce2anndata\", \"input_object_file\": {\"values\": [{\"id\": 157, \"src\": \"hda\"}]}}"
        },
        "inputs": {
            "input_object_file": {
                "id": "b4318ddb10ded204",
                "src": "hda",
                "uuid": "dc8ac61b-ed2c-48c1-91ba-6d6f132e6fab"
            }
        },
        "outputs": {
            "output_anndata": {
                "id": "bb129666fa6639cb",
                "src": "hda",
                "uuid": "c5bcb2da-6af3-4f47-b405-ef34f064f80d"
            }
        },
        "output_collections": {},
        "tool_stdout": "AnnData object with n_obs <U+00D7> n_vars = 37 <U+00D7> 35734 \n    obs: 'Barcode', 'emptyTotal', 'emptyLogProb', 'emptyPValue', 'emptyLimited', 'emptyFDR'\n    var: 'ID', 'Symbol', 'NA.'\nclass: SingleCellExperiment \ndim: 35734 37 \nmetadata(0):\nassays(1): counts\nrownames(35734): ENSMUSG00000051951 ENSMUSG00000102851 ...\n  ENSMUSG00000096730 ENSMUSG00000095742\nrowData names(3): ID Symbol NA\ncolnames(37): CCATTCCTGTCT CCATGACGCTGT ... GGGCCTAATACT CACCGAGTTACT\ncolData names(7): Sample Barcode ... emptyLimited emptyFDR\nreducedDimNames(0):\naltExpNames(0):\n",
        "tool_stderr": "Loading required package: reticulate\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: GenomicRanges\nLoading required package: stats4\nLoading required package: BiocGenerics\nLoading required package: parallel\n\nAttaching package: 'BiocGenerics'\n\nThe following objects are masked from 'package:parallel':\n\n    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,\n    clusterExport, clusterMap, parApply, parCapply, parLapply,\n    parLapplyLB, parRapply, parSapply, parSapplyLB\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from 'package:base':\n\n    Filter, Find, Map, Position, Reduce, anyDuplicated, append,\n    as.data.frame, basename, cbind, colnames, dirname, do.call,\n    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,\n    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,\n    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,\n    tapply, union, unique, unsplit, which, which.max, which.min\n\nLoading required package: S4Vectors\n\nAttaching package: 'S4Vectors'\n\nThe following object is masked from 'package:base':\n\n    expand.grid\n\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\nLoading required package: DelayedArray\nLoading required package: matrixStats\n\nAttaching package: 'matrixStats'\n\nThe following objects are masked from 'package:Biobase':\n\n    anyMissing, rowMedians\n\n\nAttaching package: 'DelayedArray'\n\nThe following objects are masked from 'package:matrixStats':\n\n    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRanges\n\nThe following objects are masked from 'package:base':\n\n    aperm, apply, rowsum\n\n/usr/local/lib/python3.7/site-packages/anndata/base.py:17: FutureWarning: pandas.core.index is deprecated and will be removed in a future version.  The public classes are available in the top-level namespace.\n  from pandas.core.index import RangeIndex\n... storing 'Symbol' as categorical\n... storing 'NA.' as categorical\nWarning message:\nIn .regularise_df(as.data.frame(SummarizedExperiment::colData(obj))) :\n  Dropping single category variables:Sample\n",
        "job_stdout": "",
        "job_stderr": "",
        "stderr": "Loading required package: reticulate\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: GenomicRanges\nLoading required package: stats4\nLoading required package: BiocGenerics\nLoading required package: parallel\n\nAttaching package: 'BiocGenerics'\n\nThe following objects are masked from 'package:parallel':\n\n    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,\n    clusterExport, clusterMap, parApply, parCapply, parLapply,\n    parLapplyLB, parRapply, parSapply, parSapplyLB\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from 'package:base':\n\n    Filter, Find, Map, Position, Reduce, anyDuplicated, append,\n    as.data.frame, basename, cbind, colnames, dirname, do.call,\n    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,\n    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,\n    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,\n    tapply, union, unique, unsplit, which, which.max, which.min\n\nLoading required package: S4Vectors\n\nAttaching package: 'S4Vectors'\n\nThe following object is masked from 'package:base':\n\n    expand.grid\n\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\nLoading required package: DelayedArray\nLoading required package: matrixStats\n\nAttaching package: 'matrixStats'\n\nThe following objects are masked from 'package:Biobase':\n\n    anyMissing, rowMedians\n\n\nAttaching package: 'DelayedArray'\n\nThe following objects are masked from 'package:matrixStats':\n\n    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRanges\n\nThe following objects are masked from 'package:base':\n\n    aperm, apply, rowsum\n\n/usr/local/lib/python3.7/site-packages/anndata/base.py:17: FutureWarning: pandas.core.index is deprecated and will be removed in a future version.  The public classes are available in the top-level namespace.\n  from pandas.core.index import RangeIndex\n... storing 'Symbol' as categorical\n... storing 'NA.' as categorical\nWarning message:\nIn .regularise_df(as.data.frame(SummarizedExperiment::colData(obj))) :\n  Dropping single category variables:Sample\n",
        "stdout": "AnnData object with n_obs <U+00D7> n_vars = 37 <U+00D7> 35734 \n    obs: 'Barcode', 'emptyTotal', 'emptyLogProb', 'emptyPValue', 'emptyLimited', 'emptyFDR'\n    var: 'ID', 'Symbol', 'NA.'\nclass: SingleCellExperiment \ndim: 35734 37 \nmetadata(0):\nassays(1): counts\nrownames(35734): ENSMUSG00000051951 ENSMUSG00000102851 ...\n  ENSMUSG00000096730 ENSMUSG00000095742\nrowData names(3): ID Symbol NA\ncolnames(37): CCATTCCTGTCT CCATGACGCTGT ... GGGCCTAATACT CACCGAGTTACT\ncolData names(7): Sample Barcode ... emptyLimited emptyFDR\nreducedDimNames(0):\naltExpNames(0):\n",
        "job_messages": [],
        "dependencies": [],
        "user_email": "tests@fake.org",
        "job_metrics": [
            {
                "title": "Operating System",
                "value": "Linux gxy-galaxy-galaxy-bc5lp-n4k8t 5.10.176+ #1 SMP Fri May 26 15:04:00 UTC 2023 x86_64 GNU/Linux\n",
                "plugin": "uname",
                "name": "uname",
                "raw_value": "Linux gxy-galaxy-galaxy-bc5lp-n4k8t 5.10.176+ #1 SMP Fri May 26 15:04:00 UTC 2023 x86_64 GNU/Linux\n"
            },
            {
                "title": "Total System Swap",
                "value": "0 bytes",
                "plugin": "meminfo",
                "name": "swaptotal",
                "raw_value": "0E-7"
            },
            {
                "title": "Total System Memory",
                "value": "122.9 GB",
                "plugin": "meminfo",
                "name": "memtotal",
                "raw_value": "132016184.0000000"
            },
            {
                "title": "Processor Count",
                "value": "32",
                "plugin": "cpuinfo",
                "name": "processor_count",
                "raw_value": "32.0000000"
            },
            {
                "title": "Memory softlimit on cgroup",
                "value": "8.0 EB",
                "plugin": "cgroup",
                "name": "memory.soft_limit_in_bytes",
                "raw_value": "9223372036854771712.0000000"
            },
            {
                "title": "Was OOM Killer active?",
                "value": "No",
                "plugin": "cgroup",
                "name": "memory.oom_control.under_oom",
                "raw_value": "0E-7"
            },
            {
                "title": "OOM Control enabled",
                "value": "Yes",
                "plugin": "cgroup",
                "name": "memory.oom_control.oom_kill_disable",
                "raw_value": "0E-7"
            },
            {
                "title": "Max memory usage (MEM+SWP)",
                "value": "559.2 MB",
                "plugin": "cgroup",
                "name": "memory.memsw.max_usage_in_bytes",
                "raw_value": "586383360.0000000"
            },
            {
                "title": "Memory limit on cgroup (MEM+SWP)",
                "value": "16.0 GB",
                "plugin": "cgroup",
                "name": "memory.memsw.limit_in_bytes",
                "raw_value": "17179869184.0000000"
            },
            {
                "title": "Max memory usage (MEM)",
                "value": "559.2 MB",
                "plugin": "cgroup",
                "name": "memory.max_usage_in_bytes",
                "raw_value": "586383360.0000000"
            },
            {
                "title": "Memory limit on cgroup (MEM)",
                "value": "16.0 GB",
                "plugin": "cgroup",
                "name": "memory.limit_in_bytes",
                "raw_value": "17179869184.0000000"
            },
            {
                "title": "Failed to allocate memory count",
                "value": 0.0,
                "plugin": "cgroup",
                "name": "memory.failcnt",
                "raw_value": "0E-7"
            },
            {
                "title": "CPU Time",
                "value": "6.787585144 seconds",
                "plugin": "cgroup",
                "name": "cpuacct.usage",
                "raw_value": "6787585144.0000000"
            },
            {
                "title": "Job Runtime (Wall Clock)",
                "value": "7 seconds",
                "plugin": "core",
                "name": "runtime_seconds",
                "raw_value": "7.0000000"
            },
            {
                "title": "Job End Time",
                "value": "2023-07-28 19:41:59",
                "plugin": "core",
                "name": "end_epoch",
                "raw_value": "1690573319.0000000"
            },
            {
                "title": "Job Start Time",
                "value": "2023-07-28 19:41:52",
                "plugin": "core",
                "name": "start_epoch",
                "raw_value": "1690573312.0000000"
            },
            {
                "title": "Memory Allocated (MB)",
                "value": "17179",
                "plugin": "core",
                "name": "galaxy_memory_mb",
                "raw_value": "17179.0000000"
            },
            {
                "title": "Cores Allocated",
                "value": "8",
                "plugin": "core",
                "name": "galaxy_slots",
                "raw_value": "8.0000000"
            }
        ]
    },
    "status": {
        "model_class": "Job",
        "id": "3fa753d6fe356e6b",
        "state": "ok",
        "exit_code": 0,
        "update_time": "2023-07-28T19:42:08.722204",
        "create_time": "2023-07-28T19:33:41.345953",
        "galaxy_version": "23.0",
        "command_version": "",
        "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/sceasy_convert/sceasy_convert/0.0.5+galaxy1",
        "history_id": "49d18fedd87e0f01",
        "external_id": "gxy-galaxy-galaxy-bc5lp",
        "command_line": "ln -s /galaxy/server/database/objects/d/c/8/dataset_dc8ac61b-ed2c-48c1-91ba-6d6f132e6fab.dat input.rds &&  Rscript -e 'library(sceasy)' -e 'sce <- readRDS(\"input.rds\")' -e 'sceasy::convertFormat(sce, outFile=\"output.h5ad\", from=\"sce\", to=\"anndata\", main_layer=\"counts\")' -e 'print(sce)'",
        "traceback": null,
        "params": {
            "__input_ext": "\"rdata\"",
            "dbkey": "\"?\"",
            "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
            "__workflow_invocation_uuid__": "\"a7479de22d7d11ee862856759b808bb9\"",
            "conversion": "{\"__current_case__\": 2, \"assay\": \"counts\", \"direction\": \"sce2anndata\", \"input_object_file\": {\"values\": [{\"id\": 157, \"src\": \"hda\"}]}}"
        },
        "inputs": {
            "input_object_file": {
                "id": "b4318ddb10ded204",
                "src": "hda",
                "uuid": "dc8ac61b-ed2c-48c1-91ba-6d6f132e6fab"
            }
        },
        "outputs": {
            "output_anndata": {
                "id": "bb129666fa6639cb",
                "src": "hda",
                "uuid": "c5bcb2da-6af3-4f47-b405-ef34f064f80d"
            }
        },
        "output_collections": {}
    },
    "server": "http://35.185.17.116:8000/galaxy/",
    "ref_data_size": [],
    "input_data_size": [
        39834229,
        102234229,
        253580346,
        1036917979
    ]
}