---
# This playbook will set up an (eksctl) cluster with Galaxy
# Run with:
#   eksctl create cluster -f build_aws_cluster.yaml --profile profileName

- name: Set up Galaxy
  hosts: localhost
  connection: local
  vars:
    # gp2 is the default storage class created via eksctl
    cluster_storage_class: gp2
    nfs_disk_size: 501
  tasks:

    - name: Add stable chart repos
      kubernetes.core.helm_repository:
        name: "{{ item.name }}"
        repo_url: "{{ item.url }}"
      loop:
        - { name: 'ingress-nginx', url: 'https://kubernetes.github.io/ingress-nginx' }
        - { name: 'stable', url: 'https://charts.helm.sh/stable' }
        - { name: 'galaxyproject', url: 'https://raw.githubusercontent.com/CloudVE/helm-charts/master/' }

    - name: Check if nginx-ingress is already installed
      kubernetes.core.helm_info:
        release_name: ingress-nginx
        release_namespace: ingress-nginx
      register: ingress_chart

    - name: Add cluster Nginx ingress chart
      kubernetes.core.helm:
        name: ingress-nginx
        chart_ref: ingress-nginx/ingress-nginx
        chart_version: 3.34.0
        release_namespace: ingress-nginx
        create_namespace: yes
        values:
          controller:
            kind: "DeamonSet"
            hostNetwork: true
            daemonset:
              useHostPort: true
      when: ingress_chart.status.status != "deployed" and ingress_chart.status.status != "failed"

    - name: Check if nfs-provisioner is already installed
      kubernetes.core.helm_info:
        release_name: nfs-provisioner
        release_namespace: csi-drivers
      register: nfs_chart

    # The values set below cannot be set on an existing deployment so don't run if it exists
    - name: Add nfs-provisioner chart
      kubernetes.core.helm:
        name: nfs-provisioner
        chart_ref: stable/nfs-server-provisioner
        release_namespace: csi-drivers
        create_namespace: yes
        wait: yes
        values:
          persistence:
            enabled: true
            storageClass: "{{ cluster_storage_class }}"
            size: "{{ nfs_disk_size }}"
          storageClass:
            create: true
            reclaimPolicy: "Delete"
            allowVolumeExpansion: true
      when: nfs_chart.status.status != "deployed" and nfs_chart.status.status != "failed"

    - name: Add Galaxy chart
      kubernetes.core.helm:
        name: galaxy
        chart_ref: galaxyproject/galaxy
        release_namespace: gxy
        create_namespace: yes
        values_files:
          - ./galaxy_values.yaml
      register: galaxy
      ignore_errors: true

    - name: Get loadbalancer URL
      command: kubectl get services -n ingress-nginx
      register: services

    - debug: msg="{{ services.stdout }}"
