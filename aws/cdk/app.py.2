#!/usr/bin/env python3
from aws_cdk import Stack, App, aws_eks as eks
from aws_cdk import aws_ec2 as ec2
from constructs import Construct
#import aws_cdk

class EksClusterStack(Stack):
    def __init__(self, scope: Construct, id: str, **kwargs) -> None:
        super().__init__(scope, id, **kwargs)

        # Create the EKS cluster
        eks_cluster = eks.Cluster(
            self,
            "EksCluster",
            version=eks.KubernetesVersion.V1_24,
            default_capacity=0,  # We'll add capacity later
        )

        # Add capacity to the EKS cluster
        eks_cluster.add_capacity(
            "EksCapacity",
            instance_type=ec2.InstanceType("m6i.2xlarge"),
            desired_capacity=2,  # Number of instances
            key_name="aws-cloudcost-benchmark",  # Public key name
            min_capacity=1,
            max_capacity=10,
            disk_size=768,  # Disk size in GB
        )

        # Expose the EKS cluster to the public internet
        eks_cluster.aws_auth.add_masters_role(eks_cluster.cluster_arn)
        eks_cluster.aws_auth.add_masters_security_group(
            eks_cluster.cluster_security_group_id
        )
        eks_cluster.aws_auth.add_public_cidrs("0.0.0.0/0")  # Allow access from any IP


app = App()
EksClusterStack(app, "EksClusterStack")
app.synth()
